# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Setup, Build and Publish Python package

on:
  release:
    types: [published]

jobs:
  setup:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/rps-engine-client-python/
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry==1.7.1" poetry-dynamic-versioning

      - name: Install dependencies
        run: poetry install
        working-directory: Client

  build:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Check Git tags
        run: git tag

      - name: Build package
        run: poetry build
        working-directory: Client


  publish: 
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Move dist to root
        run: mv Client/dist ./dist
        
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1


# jobs:
#   publish:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#     environment:
#       name: pypi
#       url: https://pypi.org/project/rps-engine-client-python/
      
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           fetch-tags: true
          
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.11.9"

#       - name: Install Poetry
#         run: |
#           python -m pip install --upgrade pip
#           pip install "poetry==1.7.1" poetry-dynamic-versioning

#       - name: Install dependencies
#         run: poetry install
#         working-directory: Client

#       - name: Check Git tags
#         run: git tag

#       - name: Build package
#         run: poetry build
#         working-directory: Client

#       - name: Move dist to root
#         run: mv Client/dist ./dist
        
#       - name: Publish package to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
        
